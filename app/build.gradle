apply plugin: 'com.android.application'
apply from: '../dependencies.gradle'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':mylibrary')
    compile project(':push')
    compile project(':chatapp')
    //黄牛刀注解
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + mydemo.butterknife_compiler

    compile 'com.android.support:multidex:1.0.1'

    //友盟推送相关
    //PushSDK
//    compile 'com.umeng.sdk:push:4.1.0'

}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.example.mydemo"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode publish.versionCode
        versionName publish.versionName
        multiDexEnabled true

        //添加如下配置就OK了
        javaCompileOptions {
            annotationProcessorOptions { includeCompileClasspath = true }
        }

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "14731b03f72f264fb9e1b6eb", //JPush上注册的包名对应的appkey.
//                JPUSH_APPKEY : "bf27da961c6d987b8c335d14", //ces.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "4g"
    }

//    configurations {
//        all*.exclude group: 'com.android.support', module: 'support-annotations'
//        all*.exclude group: 'com.android.support', module: 'support-v4'
//    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']//指定lib库目录
        }
    }

    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
    }

    signingConfigs {
        release {
            storeFile file('keystore.jks')
            keyAlias 'sxyx'
            keyPassword 'sxyx123456'
            storePassword 'sxyx123456'
        }
    }

}

