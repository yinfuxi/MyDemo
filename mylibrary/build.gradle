apply plugin: 'com.android.library'
apply from: '../dependencies.gradle'


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:' + versions.supportLibrary
    compile 'com.android.support:support-v4:' + versions.supportLibrary
    compile 'com.android.support:design:'+ versions.supportLibrary
    //权限管理
    compile('pub.devrel:easypermissions:' + framelibrary.easypermissions) {
        exclude module: 'appcompat-v7'
    }

    //rxjava2+retrofit2
    compile "io.reactivex.rxjava2:rxjava:2.1.0" // 必要rxjava2依赖
    compile "io.reactivex.rxjava2:rxandroid:2.0.1" // 必要rxandrroid依赖，切线程时需要用到
    compile 'com.squareup.retrofit2:retrofit:2.3.0' // 必要retrofit依赖
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
    compile ('com.squareup.retrofit2:converter-gson:2.3.0'){// 必要依赖，解析json字符所用
        exclude group : 'com.google.code.gson'
    }

    //log日志
    compile 'com.orhanobut:logger:2.2.0'

    //BottomNavigationViewEx 底部导航栏
    compile 'com.github.ittianyu:BottomNavigationViewEx:2.0.2'

    //黄牛刀注解
    compile 'com.jakewharton:butterknife:' + mydemo.butterknife

    //方法数超过了65536的分包方案
    compile 'com.android.support:multidex:1.0.1'
}


android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode publish.versionCode
        versionName publish.versionName

        //添加如下配置就OK了
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    configurations {
//        all*.exclude group: 'com.android.support', module: 'support-annotations'
//        all*.exclude group: 'com.android.support', module: 'support-v4'
//    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']//指定lib库目录
        }
    }
}

